Kellen Haas
CPSC 2311
Lab7 Worksheet
7/21/20


1. Fill in the table below for every call to "fact". Each row
represents the values of r1 and lr when line 3 executes and they are pushed
onto the stack. The first time it executes, r1 is unset and the lr points to line 39.

r1	lr
---	-------
-	39
10	12
9 	12
8	12
7	12
6	12
5	12
4	12
3	12
2	12


2. In "fac.s", the multiply instruction on line 12 comes after a "bl" which is a branch that will always be taken. How does line 12 get executed if the "bl" is always taken? 
	The command "bl" stands for "branch with link" and it copies the address of the next instruction in the program to the link register (LR).

HINT: Review what "bl" does at http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0489c/Cihfddaf.html (scroll down to "Operations")



3. Why doesn't the code in "fac2.s" save any registers on the stack? What is it doing instead?
	Instead of pushing any registers onto the stack, fac2.s pushes the linked register onto the stack. Because fac2.s is not recursive, it does not need to call itself over and over and therefore does not need to push other registers onto the stack to be saved.



4. Identify which program calculates the factorial recursively and which is iterative.
	fac.s is recursive and fac2.s is iterative because fac.s has a function called "fact" that calls itself over and over again until the equal to condition is met, while fac2.s  has a function called "" for the loop to exit when a certain condition is met. 


NOTE: The comments for "main:" in "fac.s" are already done for you and you do not have to comment "main:" in "fac2.s".

test
